{"ast":null,"code":"var _jsxFileName = \"/home/a7mad/code/SPA/router/project2-routing/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n\n//done\n\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// done\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n\n//done \n\n// 4. Add properly working links to the MainNavigation\n\n//done\n\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n\n//done \n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n\n//done\n\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n//done\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventPage, { loader as eventsLoader } from './pages/Event';\nimport EditEvintPage from './pages/EditEventpage';\nimport NewEvnetPage from './pages/NewEventPage';\nimport RootLayout from './pages/Root';\nimport EventDetailPage from './pages/EventDetail';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 25\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 34\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEvnetPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: ':eventId/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEvintPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventPage","loader","eventsLoader","EditEvintPage","NewEvnetPage","RootLayout","EventDetailPage","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["/home/a7mad/code/SPA/router/project2-routing/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n\n//done\n\n\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// done\n\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n\n\n//done \n\n\n// 4. Add properly working links to the MainNavigation\n\n//done\n\n\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n\n//done \n\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n\n//done\n\n\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n//done\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\n\nimport HomePage from './pages/Home';\nimport EventPage, { loader as eventsLoader } from './pages/Event';\nimport EditEvintPage from './pages/EditEventpage';\nimport NewEvnetPage from './pages/NewEventPage';\nimport RootLayout from './pages/Root';\nimport EventDetailPage from './pages/EventDetail';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\n\n\n\nconst router = createBrowserRouter([\n  {\n    path: '/', element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: 'events', element: <EventsRootLayout />, children: [\n          {\n            index: true,\n\n            element: <EventPage />,\n            loader: eventsLoader\n          },\n          { path: ':eventId', element: <EventDetailPage /> },\n          { path: 'new', element: <NewEvnetPage /> },\n          { path: ':eventId/edit', element: <EditEvintPage /> },\n        ]\n      },\n\n    ]\n  }\n\n\n]);\n\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,IAAIC,MAAM,IAAIC,YAAY,QAAQ,eAAe;AACjE,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,MAAMC,MAAM,GAAGb,mBAAmB,CAAC,CACjC;EACEc,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACL,UAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAClCC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAC3BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACX,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,CAAC,EACtC;IACEL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACH,gBAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IAAEE,QAAQ,EAAE,CACvD;MACEC,KAAK,EAAE,IAAI;MAEXP,OAAO,eAAEH,OAAA,CAACV,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MACtBhB,MAAM,EAAEC;IACV,CAAC,EACD;MAAEU,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACJ,eAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI,CAAC,EAClD;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACN,YAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI,CAAC,EAC1C;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACP,aAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI,CAAC;EAEzD,CAAC;AAGL,CAAC,CAGF,CAAC;AAGF,SAASI,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACb,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}