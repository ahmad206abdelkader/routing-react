{"ast":null,"code":"var _jsxFileName = \"/home/a7mad/code/SPA/router/project2-routing/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action() {\n  fetch('http://localhost:8080/events/');\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["/home/a7mad/code/SPA/router/project2-routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json } from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\n\nfunction EventDetailPage() {\n    const data = useRouteLoaderData('event-detail');\n\n    return <EventItem event={data.event} />;\n}\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n    const id = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json(\n            { message: 'Could not fetch details for selected event.' },\n            {\n                status: 500,\n            }\n        );\n    } else {\n        return response;\n    }\n}\n\nexport async function action() {\n    fetch('http://localhost:8080/events/')\n};"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOI,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3C;AAACN,EAAA,CAJQD,eAAe;EAAA,QACPL,kBAAkB;AAAA;AAAAa,EAAA,GAD1BR,eAAe;AAMxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMrB,IAAI,CACN;MAAEsB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACIC,MAAM,EAAE;IACZ,CAAC,CACJ;EACL,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAG;EAC3BJ,KAAK,CAAC,+BAA+B,CAAC;AAC1C;AAAC;AAAC,IAAAR,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}