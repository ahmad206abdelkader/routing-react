{"ast":null,"code":"var _jsxFileName = \"/home/a7mad/code/SPA/router/project2-routing/frontend/src/pages/Event.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // if (data.isError) {\n  //     return <p>{data.message}</p>\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'could not fetch events.' };\n    // throw new response(JSON.stringify({ message: 'Could noy fetch events!', status: 500 }));\n\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  }\n  if (!JSON.ok) {\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","JSON","$RefreshReg$"],"sources":["/home/a7mad/code/SPA/router/project2-routing/frontend/src/pages/Event.js"],"sourcesContent":["import { useLoaderData, json } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n    const data = useLoaderData();\n\n    // if (data.isError) {\n    //     return <p>{data.message}</p>\n    // }\n    const events = data.events;\n\n    return (\n        <>\n            <EventsList events={events} />\n        </>\n    );\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        // return { isError: true, message: 'could not fetch events.' };\n        // throw new response(JSON.stringify({ message: 'Could noy fetch events!', status: 500 }));\n\n        throw json(\n            { message: 'Could not fetch events.' },\n            {\n                status: 500,\n            }\n        );\n    }\n    if (!JSON.ok) {\n\n        throw json(\n            { message: 'Could not fetch events.' },\n            {\n                status: 500,\n            }\n        );\n    }\n    else {\n\n        return response;\n\n    }\n\n\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGT,aAAa,EAAE;;EAE5B;EACA;EACA;EACA,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBAC/B;AAEX;AAACP,EAAA,CAbQD,UAAU;EAAA,QACFP,aAAa;AAAA;AAAAgB,EAAA,GADrBT,UAAU;AAenB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;;IAEA,MAAMnB,IAAI,CACN;MAAEoB,OAAO,EAAE;IAA0B,CAAC,EACtC;MACIC,MAAM,EAAE;IACZ,CAAC,CACJ;EACL;EACA,IAAI,CAACC,IAAI,CAACH,EAAE,EAAE;IAEV,MAAMnB,IAAI,CACN;MAAEoB,OAAO,EAAE;IAA0B,CAAC,EACtC;MACIC,MAAM,EAAE;IACZ,CAAC,CACJ;EACL,CAAC,MACI;IAED,OAAOJ,QAAQ;EAEnB;AAGJ;AAAC,IAAAF,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}