{"ast":null,"code":"var _jsxFileName = \"/home/a7mad/code/SPA/router/project2-routing/frontend/src/pages/NewEventPage.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEvnetPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEvnetPage;\n;\nexport default NewEvnetPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const enteredData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(enteredData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'could not save events'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEvnetPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEvnetPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","enteredData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/home/a7mad/code/SPA/router/project2-routing/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\n\nfunction NewEvnetPage() {\n\n    return <EventForm />;\n};\n\nexport default NewEvnetPage;\n\nexport async function action({ request, params }) {\n    const data = await request.formData();\n\n    const enteredData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description')\n    }\n\n    const response = fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(enteredData)\n\n    });\n\n    if (!response.ok) {\n        throw json({ message: 'could not save events' }, { status: 500 })\n    }\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,YAAYA,CAAA,EAAG;EAEpB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxB;AAACC,EAAA,GAHQL,YAAY;AAGpB;AAED,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErC,MAAMC,WAAW,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAGC,KAAK,CAAC,8BAA8B,EAAE;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;EAEpC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM7B,IAAI,CAAC;MAAE8B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;AACJ;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}